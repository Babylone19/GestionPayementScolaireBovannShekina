generator client {
  provider = "prisma-client-js"
}

// ⚡ CHANGEMENT ICI - MongoDB → PostgreSQL
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id          String   @id @default(uuid())
  lastName    String
  firstName   String
  institution String   @default("BOVANN GROUP SAS")
  studyLevel  String   @default("BEPC")
  profession  String   @default("Etudiant")
  phone       String
  email       String
  photo       String?
  domain      String   @default("GENIE_INFORMATIQUE")
  infoChannel String   @default("TIKTOK")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  payments    Payment[]
  accessCards AccessCard[]

  @@map("students")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     @default(SECRETARY)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Payment {
  id            String        @id @default(uuid())
  amount        Float
  validFrom     DateTime
  validUntil    DateTime
  status        PaymentStatus @default(PENDING)
  student       Student       @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId     String
  createdAt     DateTime      @default(now())

  accessCard    AccessCard?

  @@map("payments")
}

model AccessCard {
  id         String   @id @default(uuid())
  qrData     String
  student    Student  @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId  String
  payment    Payment  @relation(fields: [paymentId], references: [id], onDelete: Cascade)
  paymentId  String   @unique
  scans      ScanLog[]

  @@map("accessCards")
}

model ScanLog {
  id         String     @id @default(uuid())
  card       AccessCard @relation(fields: [cardId], references: [id], onDelete: Cascade)
  cardId     String
  scannedAt  DateTime   @default(now())
  guardianId String

  @@map("scanLogs")
}

enum Role {
  ADMIN
  SECRETARY
  ACCOUNTANT
  GUARD
}

enum PaymentStatus {
  PENDING
  VALID
  EXPIRED
}